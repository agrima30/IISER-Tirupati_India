[{"/home/agu/Documents/LabEyes website/labeyes/src/index.js":"1","/home/agu/Documents/LabEyes website/labeyes/src/App.js":"2","/home/agu/Documents/LabEyes website/labeyes/src/reportWebVitals.js":"3","/home/agu/Documents/LabEyes website/labeyes/src/pages/home/Home.js":"4","/home/agu/Documents/LabEyes website/labeyes/src/pages/generator/QRgenerator.js":"5","/home/agu/Documents/LabEyes website/labeyes/src/pages/scanner/QRscanner.js":"6"},{"size":500,"mtime":1633197531445,"results":"7","hashOfConfig":"8"},{"size":774,"mtime":1633853085428,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1633197531545,"results":"10","hashOfConfig":"8"},{"size":1542,"mtime":1633797186884,"results":"11","hashOfConfig":"8"},{"size":2209,"mtime":1633854270327,"results":"12","hashOfConfig":"8"},{"size":1868,"mtime":1633896089542,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"6rrvof",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/agu/Documents/LabEyes website/labeyes/src/index.js",[],["28","29"],"/home/agu/Documents/LabEyes website/labeyes/src/App.js",[],"/home/agu/Documents/LabEyes website/labeyes/src/reportWebVitals.js",[],"/home/agu/Documents/LabEyes website/labeyes/src/pages/home/Home.js",[],"/home/agu/Documents/LabEyes website/labeyes/src/pages/generator/QRgenerator.js",["30"],"import React, { useState } from 'react';\nimport {\n  Fab,\n  TextField,\n  TextareaAutosize,\n  Typography,\n  Grid,\n} from '@material-ui/core';\nimport { ArrowBack, GetApp } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport QRcode from 'qrcode.react';\n\nimport './generator.css';\n\nfunction QRgenerator() {\n  const [qr, setQr] = useState('Enter Equipment Name Here');\n  const handleChange = (event) => {\n    setQr(event.target.value);\n  };\n  const downloadQR = () => {\n    const canvas = document.getElementById('myqr');\n    const pngUrl = canvas\n      .toDataURL('image/png')\n      .replace('image/png', 'image/octet-stream');\n    let downloadLink = document.createElement('a');\n    downloadLink.href = pngUrl;\n    downloadLink.download = 'myqr.png';\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  return (\n    <div className='center'>\n      <Grid container spacing={2}>\n        <Grid item xs>\n          <Link to='/'>\n            <Fab className='bt' style={{ marginRight: 10 }} color='primary'>\n              <ArrowBack />\n            </Fab>\n          </Link>\n          <Typography className='generator' variant='h2'>\n            QR GENERATOR\n          </Typography>\n        </Grid>\n\n        <Grid item xs>\n          <div style={{ marginTop: 30 }} className='textfield'>\n            <TextField\n              onChange={handleChange}\n              style={{ width: 320 }}\n              value={qr}\n              label='QR content'\n              size='large'\n              variant='outlined'\n              color='secondary'\n            />\n          </div>\n\n          <div>\n            {qr ? (\n              <QRcode id='myqr' value={qr} size={320} includeMargin={true} />\n            ) : (\n              <p>No QR code preview</p>\n            )}\n          </div>\n          <div>\n            {qr ? (\n              <Grid item xs>\n                <Fab onClick={downloadQR} color='primary' className='bt'>\n                  <GetApp />\n                </Fab>\n              </Grid>\n            ) : (\n              ''\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default QRgenerator;\n","/home/agu/Documents/LabEyes website/labeyes/src/pages/scanner/QRscanner.js",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":5,"column":3,"nodeType":"38","messageId":"39","endLine":5,"endColumn":19},{"ruleId":null,"fatal":true,"severity":2,"message":"40","line":17,"column":33},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'TextareaAutosize' is defined but never used.","Identifier","unusedVar","Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m 15 |\u001b[39m       setQrscan(data)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m     }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     data \u001b[33m?\u001b[39m speak({ text\u001b[33m:\u001b[39m data })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m   }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m   \u001b[36mconst\u001b[39m handleError \u001b[33m=\u001b[39m (err) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m     console\u001b[33m.\u001b[39merror(err)\u001b[33m;\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]